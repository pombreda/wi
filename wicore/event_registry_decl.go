// generated by go run ../tools/wi-event-generator/main.go -output event_registry_decl.go; DO NOT EDIT

package wicore

import (
	"github.com/maruel/wi/pkg/key"
	"github.com/maruel/wi/pkg/lang"
)

// EventListenerID is to be used to cancel an event listener.
type EventListenerID int

// EventRegistry permits to register callbacks that are called on events.
//
// When the callback returns false, the next registered events are not called.
//
// Warning: This interface is automatically generated.
type EventRegistry interface {
	EventsDefinition

	// Unregister unregisters a callback. Returns an error if the event was not
	// registered.
	Unregister(eventID EventListenerID) error

	RegisterCommands(callback func(a EnqueuedCommands)) EventListenerID
	RegisterDocumentCreated(callback func(a Document)) EventListenerID
	RegisterDocumentCursorMoved(callback func(a Document, b int, c int)) EventListenerID
	RegisterEditorKeyboardModeChanged(callback func(a KeyboardMode)) EventListenerID
	RegisterEditorLanguage(callback func(a lang.Language)) EventListenerID
	RegisterTerminalKeyPressed(callback func(a key.Press)) EventListenerID
	RegisterTerminalMetaKeyPressed(callback func(a key.Press)) EventListenerID
	RegisterTerminalResized(callback func()) EventListenerID
	RegisterViewActivated(callback func(a View)) EventListenerID
	RegisterViewCreated(callback func(a View)) EventListenerID
	RegisterWindowCreated(callback func(a Window)) EventListenerID
	RegisterWindowResized(callback func(a Window)) EventListenerID
}
