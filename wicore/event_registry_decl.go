// generated by go run ../tools/wi-event-generator/main.go -output event_registry_decl.go; DO NOT EDIT

package wicore

import (
	"io"

	"github.com/maruel/wi/wicore/key"
	"github.com/maruel/wi/wicore/lang"
)

// EventListener is to be used to cancel an event listener.
type EventListener interface {
	io.Closer
}

// NumberEvents is the number of known events.
const NumberEvents = 12

// EventRegistry permits to register callbacks that are called on events.
//
// When the callback returns false, the next registered events are not called.
//
// Warning: This interface is automatically generated.
type EventRegistry interface {
	EventsDefinition

	RegisterCommands(callback func(cmds EnqueuedCommands)) EventListener
	RegisterDocumentCreated(callback func(doc Document)) EventListener
	RegisterDocumentCursorMoved(callback func(doc Document, col int, row int)) EventListener
	RegisterEditorKeyboardModeChanged(callback func(mode KeyboardMode)) EventListener
	RegisterEditorLanguage(callback func(l lang.Language)) EventListener
	RegisterTerminalKeyPressed(callback func(k key.Press)) EventListener
	RegisterTerminalMetaKeyPressed(callback func(k key.Press)) EventListener
	RegisterTerminalResized(callback func()) EventListener
	RegisterViewActivated(callback func(view View)) EventListener
	RegisterViewCreated(callback func(view View)) EventListener
	RegisterWindowCreated(callback func(window Window)) EventListener
	RegisterWindowResized(callback func(window Window)) EventListener
}
